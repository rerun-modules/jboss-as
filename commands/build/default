#!/usr/bin/env bash
#
#/ command: jboss-as:build: ""Build and package JBoss for installation""
#
#/ usage: rerun jboss-as:build  --directory|-d <> [ --format|-f <rpm>] [ --release|-r <1>] [ --url|-u <http://download.jboss.org/jbossas>]  --version|-v <> 
#
#/ variables: DIRECTORY FORMAT RELEASE URL VERSION

# Read module function library.
. $RERUN_MODULE_DIR/lib/functions.sh || { 
  echo >&2 "Failed loading function library" ; exit 1 ; 
}

# Parse the command options.
[ -r $RERUN_MODULE_DIR/commands/build/options.sh ] && {
  . $RERUN_MODULE_DIR/commands/build/options.sh || exit 2 ;
}

# Exit immediately upon non-zero exit for simple commands. 
# See [set](http://ss64.com/bash/set.html)
# Pipelines return with exit code of left most command failure.
# See [pipelines](http://www.gnu.org/software/bash/manual/bash.html#Pipelines)
set -e -o pipefail

# ------------------------------
# Your implementation goes here.
# ------------------------------

buildrpm() {
  if [[ ! -e $DIRECTORY/SOURCES/jboss-as-${VERSION}.zip ]]
  then
    # Download the specified version from the downloads site:
    # e.g. http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip

    cd $DIRECTORY/SOURCES

    MAJORMINOR=$(echo $VERSION | cut -d. -f1,2)
    wget -q ${URL}/${MAJORMINOR}/jboss-as-${VERSION}/jboss-as-${VERSION}.zip 
  fi

  rerun rpm:build -n jboss-as -v $VERSION -r $RELEASE -t $DIRECTORY
}

case $FORMAT in
  rpm)
    buildrpm
    ;;
  *)
    rerun_die "invalid package format \"$FORMAT\""
    ;;
esac

exit $?

# Done
